name: Releases

on:
  push:
    tags:
      - "v*develop*"
      - "v*prod*"

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.get-image.outputs.image }}

    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/image-tumbal:${{ github.ref_name }}

      - name: Get Image Information
        id: get-image
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/image-tumbal:${{ github.ref_name }}"
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
          echo "DEBUG: Setting image output to $IMAGE"

  deploy_dev:
    runs-on: ubuntu-20.04
    needs: build
    if: contains(github.ref_name, 'develop')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Debug Outputs
        run: |
          echo "DEBUG: Needs output: ${{ needs.build.outputs.image }}"
          echo "DEBUG: GITHUB_REF: ${{ github.ref }}"
          echo "DEBUG: GITHUB_REF_NAME: ${{ github.ref_name }}"

      - name: Print Image Name
        run: |
          echo "Image from build: ${{ needs.build.outputs.image }}"

      - name: Print Output Environments
        run: echo "This is Development Environment"

  deploy__prod:
    runs-on: ubuntu-20.04
    needs: [build]
    if: contains(github.event.ref, 'prod')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Print Output Environments
        run: echo This is Production Environment

  # helm:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - env:
  #         OUTPUT_SHA: ${{ needs.build.outputs.output_sha }}
  #       run: echo "$OUTPUT_SHA"

  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     - name: Print sha
  #       run: echo "${{ env.OUTPUT_SHA }}"

  #     - name: update deployment
  #       env:
  #         OUTPUT_SHA: ${{ needs.build.outputs.output_sha }}
  #       run: |
  #         sed -i "s,__TAG__,$OUTPUT_SHA,g" values.yaml
  #         cat values.yaml
